[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
init-hook='import sys; sys.path.append("/mnt/c/introspectDocs/SvtPython/")'

# CJBH: commented-out the following 'profile' option since it is deprecated
# Profiled execution.
#profile=no

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=no

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time. See also the "--disable" option for examples.
#enable=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
#disable=
# R0102 is "The if statement can be reduced by returning bool of test"
# R0201 is "Method could be a function"
# W0221 is "Arguments number differs from overridden method"
# W0201 is "Attribute defined outside of __init__"
# W0142 is "Used * or ** magic"
# W0110 is "Map/filter on lambda could be replaced by comprehension"
# W0108 is "Lambda may not be necessary"
# W0703 is "Catching too general exception"
# W0212 is "Access to a protected member of a client class
# W0105 is "String statement has no effect" # e.g. a comment in triple quotes
# W0122 is "Use of the exec statement"
# W0603 is "Using the global statement"
# C0326 is "No space allowed around keyword argument assignment"
# C0325 is "Unnecessary parens after 'not' keyword"
# W0633 is "Attempting to unpack a non-sequence defined at ..." (because None after error)
# C0330 is "Wrong hanging indentation"
# PyLint 1.5.3 gives errors E1133, E1135, E1136 when it can't determine if value is iterable/subscriuptable or not
# E1135 is "Value ... doesn't support membership test"
# E1133 is "Non-iterable value ... is used in an iterating context"
# E1136 is "Value ... is unsubscriptable"
disable=R0102,R0201,W0221,W0201,W0142,W0110,W0108,W0703,W0212,W0105,W0122,W0603,C0326,C0325,W0633,C0330,E1133,E1135,E1136, I0011

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# CJBH: commented-out the following 'include-ids' option since it is deprecated
# Include message's id in output
#include-ids=no

# CJBH: commented-out the following 'symbols' option since it is deprecated
# Include symbolic ids of messages in output
#symbols=no

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# CJBH: commented-out the following 'comment' option since it is deprecated
# Add a comment according to your evaluation note. This is used by the global
# evaluation report (RP0004).
#comment=no


[BASIC]

# CJBH: commented-out the following 'required-attributes' option since it is deprecated
# Required attributes for module, separated by a comma
#required-attributes=

# List of builtins function names that should not be used, separated by a comma
#bad-functions=map,filter,apply,input
bad-functions=apply,input

# Regular expression which should only match correct module names
#module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
module-rgx=(([a-z_][a-zA-Z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
#const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
const-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
#class-rgx=[A-Z_][a-zA-Z0-9]+$
class-rgx=[A-Z_][a-zA-Z0-9_]+$

# Regular expression which should only match correct function names
#function-rgx=[a-z_][a-z0-9_]{2,30}$
function-rgx=[a-z_][a-zA-Z0-9_]{2,50}$

# Regular expression which should only match correct method names
#method-rgx=[a-z_][a-z0-9_]{2,30}$
method-rgx=[a-z_][a-zA-Z0-9_]{2,50}$

# Regular expression which should only match correct instance attribute names
#attr-rgx=[a-z_][a-z0-9_]{2,30}$
attr-rgx=[a-z_][a-zA-Z0-9_]{1,40}$

# Regular expression which should only match correct attribute names in class bodies
#class-attribute-rgx=(([A-Za-z_][A-Za-z0-9_]{2,30})|(__.*__))$
class-attribute-rgx=(([A-Za-z_][A-Za-z0-9_]{2,40})|(__.*__))$

# Regular expression which should only match correct argument names
#argument-rgx=[a-z_][a-z0-9_]{2,30}$
argument-rgx=[a-z_][a-zA-Z0-9_]{1,30}$

# Regular expression which should only match correct variable names
#variable-rgx=[a-z_][a-z0-9_]{2,30}$
variable-rgx=[a-zA-Z_][a-zA-Z0-9_]{1,40}$
# Note: we allow variable names starting with an uppercase letter
#       for aliases to class names (e.g. for Enum classes)

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
#good-names=i,j,k,ex,Run,_
good-names=a,b,c,e,i,j,k,n,w,r,x,y,z,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Regular expression which should only match functions or classes name which do
# not require a docstring
#no-docstring-rgx=__.*__
no-docstring-rgx=.*


[FORMAT]

# Maximum number of characters on a single line.
#max-line-length=80
max-line-length=120

# Maximum number of lines in a module
#max-module-lines=1000
max-module-lines=10000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
#notes=FIXME,XXX,TODO
notes=FIXME


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
# RxLpStateMachine/dictAB: ignored because have dynamically programmed attributes/methods
ignored-classes=SQLObject,RxLpStateMachine,dictAB

# CJBH: commented-out the following 'zope' option since it is deprecated
# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
#zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed. Python regular
# expressions are accepted.
generated-members=REQUEST,acl_users,aq_parent


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


[CLASSES]

# CJBH: commented-out the following 'ignore-iface-methods' option since it is deprecated
# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zope's Interface base class.
#ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs


[DESIGN]

# Maximum number of arguments for function / method
#max-args=5
max-args=20

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
#max-locals=15
max-locals=100

# Maximum number of return / yield for function / method body
#max-returns=6
max-returns=25

# Maximum number of branch for function / method body
# Note that this option used to be 'max-branchs'
#max-branches=12
max-branches=100

# Maximum number of statements in function / method body
#max-statements=50
max-statements=300

# Maximum number of nested blocks for function / method body
#max-nested-blocks=5
max-nested-blocks=6

# Maximum number of boolean expressions in a if statement
#max-bool-expr=5
max-bool-expr=6

# Maximum number of parents for a class (see R0901).
#max-parents=7
max-parents=20

# Maximum number of attributes for a class (see R0902).
#max-attributes=7
max-attributes=70

# Minimum number of public methods for a class (see R0903).
#min-public-methods=2
min-public-methods=0

# Maximum number of public methods for a class (see R0904).
#max-public-methods=20
max-public-methods=500


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
